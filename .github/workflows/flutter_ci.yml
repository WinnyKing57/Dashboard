name: Flutter CI

on:
  push:
    branches: [ main ] # Or your primary branch, e.g., master
  pull_request:
    branches: [ main ] # Or your primary branch

jobs:
  build_and_test:
    name: Build Flutter App & Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Or 'zulu', 'adopt'
          java-version: '17' # Or '11' as per Flutter requirements

      - name: Set up Flutter
        uses: subosito/flutter-action@v2 # Or dart-lang/setup-flutter for official
        with:
          channel: 'stable' # Or specify a version
          # cache: true # Optional: enable Flutter SDK caching

      - name: Get Flutter dependencies
        run: flutter pub get

      # Optional: Check formatting
      # - name: Check formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Optional: Analyze code
      # - name: Analyze code
      #   run: flutter analyze

      # Ensure build_runner runs before tests if there are generated files
      - name: Generate files (if any)
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Run unit and widget tests
        run: flutter test

      # Integration tests require an emulator or device, which is more complex for CI.
      # This is a placeholder and might need a dedicated job with emulator setup.
      # - name: Run integration tests (Placeholder - requires emulator/device setup)
      #   run: |
      #     echo "Integration test execution would go here."
      #     echo "This typically requires setting up an Android emulator."
      #     # flutter test integration_test

      - name: Build Android APK (Debug)
        run: flutter build apk --debug

      # Optional: Build Android App Bundle (Release - requires signing setup)
      # - name: Build Android App Bundle (Release)
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push' # Example: only for main branch pushes
      #   run: |
      #     echo "Release build would go here."
      #     echo "Requires setting up keystore, secrets for signing."
      #     # flutter build appbundle --release
      #     # Store artifact (e.g., using actions/upload-artifact)

      # Example: Upload APK as artifact (for debug builds)
      - name: Upload APK Artifact (Debug)
        uses: actions/upload-artifact@v3
        with:
          name: app-debug.apk
          path: build/app/outputs/flutter-apk/app-debug.apk
