// Mocks generated by Mockito 5.4.5 from annotations
// in flutter_dashboard_app/test/features/dashboard/dashboard_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_dashboard_app/src/models/dashboard_item.dart' as _i2;
import 'package:flutter_dashboard_app/src/models/notepad_data.dart' as _i6;
import 'package:flutter_dashboard_app/src/models/rss_feed_item.dart' as _i10;
import 'package:flutter_dashboard_app/src/models/rss_feed_source.dart' as _i9;
import 'package:flutter_dashboard_app/src/models/widget_configs/rss_widget_config.dart'
    as _i7;
import 'package:flutter_dashboard_app/src/services/dashboard_service.dart'
    as _i4;
import 'package:flutter_dashboard_app/src/services/rss_service.dart' as _i8;
import 'package:http/http.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDashboardItem_0 extends _i1.SmartFake implements _i2.DashboardItem {
  _FakeDashboardItem_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClient_1 extends _i1.SmartFake implements _i3.Client {
  _FakeClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DashboardService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDashboardService extends _i1.Mock implements _i4.DashboardService {
  MockDashboardService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> saveDashboardItem(_i2.DashboardItem? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveDashboardItem,
          [item],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteDashboardItem(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteDashboardItem,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  List<_i2.DashboardItem> getDashboardItems() => (super.noSuchMethod(
        Invocation.method(
          #getDashboardItems,
          [],
        ),
        returnValue: <_i2.DashboardItem>[],
      ) as List<_i2.DashboardItem>);

  @override
  _i5.Future<_i2.DashboardItem> createAndSaveNotepadItem(int? order) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAndSaveNotepadItem,
          [order],
        ),
        returnValue: _i5.Future<_i2.DashboardItem>.value(_FakeDashboardItem_0(
          this,
          Invocation.method(
            #createAndSaveNotepadItem,
            [order],
          ),
        )),
      ) as _i5.Future<_i2.DashboardItem>);

  @override
  _i5.Future<_i2.DashboardItem> createAndSavePlaceholderItem(int? order) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAndSavePlaceholderItem,
          [order],
        ),
        returnValue: _i5.Future<_i2.DashboardItem>.value(_FakeDashboardItem_0(
          this,
          Invocation.method(
            #createAndSavePlaceholderItem,
            [order],
          ),
        )),
      ) as _i5.Future<_i2.DashboardItem>);

  @override
  _i5.Future<void> updateNotepadData(
    String? dashboardItemId,
    _i6.NotepadData? newNotepadData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNotepadData,
          [
            dashboardItemId,
            newNotepadData,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateDashboardItemOrder(List<_i2.DashboardItem>? items) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDashboardItemOrder,
          [items],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.DashboardItem> createAndSaveRssWidgetConfigItem(
    int? order,
    _i7.RssWidgetConfig? config,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAndSaveRssWidgetConfigItem,
          [
            order,
            config,
          ],
        ),
        returnValue: _i5.Future<_i2.DashboardItem>.value(_FakeDashboardItem_0(
          this,
          Invocation.method(
            #createAndSaveRssWidgetConfigItem,
            [
              order,
              config,
            ],
          ),
        )),
      ) as _i5.Future<_i2.DashboardItem>);

  @override
  _i5.Future<_i2.DashboardItem> createAndSaveWebRadioStatusItem(int? order) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAndSaveWebRadioStatusItem,
          [order],
        ),
        returnValue: _i5.Future<_i2.DashboardItem>.value(_FakeDashboardItem_0(
          this,
          Invocation.method(
            #createAndSaveWebRadioStatusItem,
            [order],
          ),
        )),
      ) as _i5.Future<_i2.DashboardItem>);

  @override
  _i5.Future<void> clearAllDashboardItems() => (super.noSuchMethod(
        Invocation.method(
          #clearAllDashboardItems,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> importDashboardItems(List<dynamic>? itemsJson) =>
      (super.noSuchMethod(
        Invocation.method(
          #importDashboardItems,
          [itemsJson],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [RssService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRssService extends _i1.Mock implements _i8.RssService {
  MockRssService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_1(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.Client);

  @override
  _i5.Future<_i9.RssFeedSource?> addFeedSource(String? url) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFeedSource,
          [url],
        ),
        returnValue: _i5.Future<_i9.RssFeedSource?>.value(),
      ) as _i5.Future<_i9.RssFeedSource?>);

  @override
  _i5.Future<void> removeFeedSource(String? id) => (super.noSuchMethod(
        Invocation.method(
          #removeFeedSource,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  List<_i9.RssFeedSource> getFeedSources() => (super.noSuchMethod(
        Invocation.method(
          #getFeedSources,
          [],
        ),
        returnValue: <_i9.RssFeedSource>[],
      ) as List<_i9.RssFeedSource>);

  @override
  _i5.Future<List<_i10.RssFeedItem>> fetchAndCacheFeedItems(
          String? feedSourceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAndCacheFeedItems,
          [feedSourceId],
        ),
        returnValue:
            _i5.Future<List<_i10.RssFeedItem>>.value(<_i10.RssFeedItem>[]),
      ) as _i5.Future<List<_i10.RssFeedItem>>);

  @override
  List<_i10.RssFeedItem> getCachedFeedItems(String? feedSourceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedFeedItems,
          [feedSourceId],
        ),
        returnValue: <_i10.RssFeedItem>[],
      ) as List<_i10.RssFeedItem>);

  @override
  _i5.Future<void> refreshAllFeeds() => (super.noSuchMethod(
        Invocation.method(
          #refreshAllFeeds,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearAllRssData() => (super.noSuchMethod(
        Invocation.method(
          #clearAllRssData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearAllCachedItems() => (super.noSuchMethod(
        Invocation.method(
          #clearAllCachedItems,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i9.RssFeedSource?> addFeedSourceWithDetails({
    required String? id,
    required String? url,
    String? name,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFeedSourceWithDetails,
          [],
          {
            #id: id,
            #url: url,
            #name: name,
          },
        ),
        returnValue: _i5.Future<_i9.RssFeedSource?>.value(),
      ) as _i5.Future<_i9.RssFeedSource?>);

  @override
  _i5.Future<void> importFeedItems(List<dynamic>? itemsJson) =>
      (super.noSuchMethod(
        Invocation.method(
          #importFeedItems,
          [itemsJson],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
